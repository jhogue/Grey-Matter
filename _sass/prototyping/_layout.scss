.layout {
  background-color: $color-background;

  &__container {
    margin: 0 auto;
    min-width: $min-width;
    max-width: $max-width;
    padding: 0 $page-gutter;
    width: 100%;
  }

  &__content {
    margin: 0 auto;
    max-width: $text-width;
  }
}

// Grid System using flexbox
// 1. solo 
// 2. duo 
// 3. trio 
// 4. quartet 
// 5. quint 
// 6. sextet 
// 7. septet 
// 8. octet 
// 9. nonet
.grid {
  display: flex;
  flex-flow: row wrap;
  align-items: stretch;
  justify-content: space-between;

  &__item {
    padding: 0 $vert-line-height;
  }

  &__sample &__item {
    border: 1px solid $color-borders;
    padding-top: $page-gutter;
  }

  //<div class="grid grid__rail--right">
  //  <div class="grid__item grid__item__main">
  //    [ ... ]
  //  </div>
  //  <aside class="grid__item grid__item__rail">
  //    [ ... ]
  //  </aside>
  //</div>
  &__rail--left {}

  &__rail--right {}

  @include media($small) {

    &__rail--left &__item__main,
    &__rail--right &__item__main {
      width: percentage(7/$grid-columns);
    }

    &__rail--left &__item__rail,
    &__rail--right &__item__rail {
      width: percentage(5/$grid-columns);
    }
  }

  @include media($medium) {

    &__rail--left &__item__main,
    &__rail--right &__item__main {
      width: percentage(8/$grid-columns);
    }

    &__rail--left &__item__rail,
    &__rail--right &__item__rail {
      width: percentage(4/$grid-columns);
    }
  }

  @include media($large-up) {

    &__rail--left &__item__main,
    &__rail--right &__item__main {
      width: percentage(8.5/$grid-columns);
    }

    &__rail--left &__item__rail,
    &__rail--right &__item__rail {
      width: percentage(3.5/$grid-columns);
    }
  } // end &--rail__right


  // This one grows from a single col to two
  //<div class="grid grid--duo">
  //  <div class="grid__item"></div>
  //  <div class="grid__item"></div>
  // </div>
  &--duo &__item {
    width: 100%;

    @include media($small-up) {
      width: percentage(6/$grid-columns);
    }
  }


  // This one grows from a single col to a two and stops at three
  //<div class="grid grid--trio">
  //  <div class="grid__item"></div>
  //  <div class="grid__item"></div>
  //  <div class="grid__item"></div>
  // </div>
  &--trio &__item {
    width: 100%;

    // These rules will result in a 2/1 grid, where the last
    // item is full width
    @include media($medium) {
      width: percentage(6/$grid-columns);
      
      &:last-child {
        flex-grow: 2;
      }
    }

    @include media($large-up) {
      width: percentage(4/$grid-columns);
    }
  }


  // This one grows from a single col to a two and stops at four
  //<div class="grid grid--quartet">
  //  <div class="grid__item"></div>
  //  <div class="grid__item"></div>
  //  <div class="grid__item"></div>
  //  <div class="grid__item"></div>
  // </div>
  &--quartet &__item {
    width: 100%;

    @include media($small-up) {
      width: percentage(6/$grid-columns);
    }

    @include media($large-up) {
      width: percentage(3/$grid-columns);
    }
  }


  // This one starts at two over threee, then three over two, then six across
  &--sextet &__item {
    width: percentage(6/$grid-columns);

    @include media($small) {
      width: percentage(4/$grid-columns);
    }

    @include media($large-up) {
      width: percentage(2/$grid-columns);
    }
  }


  // Assemetric Grid of 1/3 vs. 2/3
  // <div class="grid grid--thirds">
  //   <div class="grid__item grid--thirds__one"></div>
  //   <div class="grid__item grid--thirds__two"></div>
  // </div>
  &--thirds &--thirds__one {

    @include media($medium-up) {
      width: percentage(4/$grid-columns);
    }
  }

  &--thirds &--thirds__two {

    @include media($medium-up) {
      width: percentage(8/$grid-columns);
    }
  }
}


// Grid Helpers
// To be used alongside the .grid class
.reverse-order {
  flex-flow: row-reverse wrap;
}