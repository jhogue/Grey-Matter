//
// Fixed Single column with a fluid neighbor
// Based on http://stugreenham.com/demos/fluid-width-with-a-fixed-sidebar/
//

/* Markup pattern

<div id="top" class="page fwf--row">
	<div class="mainnav fwf--fixed__left" role="complementary">
		[ ... ]
	</div>
	<div class="fwf--fluid-wrapper" role="main">
		<div id="main" class="content fwf--fluid__right">
			<div class="navtoggle">
			    <a href=":;javascript" class="js-open-drawer navtoggle-button">
			        <span class="icon navtoggle--icon" aria-hidden="true"><span>&equiv;</span></span>
			        <span class="icon-label">Menu</span>
			    </a>
			</div>
			
			[ ... ]
			<a class="drawer-overlay js-close-drawer"></a>
		</div>
	</div>
</div>

	JS listeners
	// Set up the open/close navigation drawer effects for small screens. Adds classes. http://codepen.io/sturobson/pen/rAoBh
	$('.js-open-drawer').click(function(e) {
		$('body').toggleClass("active-nav"); 
		$(this).toggleClass("active-button"); 
		e.preventDefault();				
	});	
	// Reset all classes if click is present off the navigation area
	$(".js-close-drawer").on('click', function(e){
		$("body").removeClass('active-nav');
		$(".menu-button").removeClass("active-button");
		e.preventDefault();
	});
*/

// Set a pixel or EM width for the drawer
$fwf-width: 300px; 

// Pattern supports a left or right drawer
.fwf {

	&--row,
	&--fluid-wrapper { @include clearfix; }

	&--row {
		@include transition( transform 250ms ease );
		position: relative;
		z-index: 1;
	}

	&--fixed {

		&__left,
		&__right {
			@include transition( transform 250ms ease );
			position: absolute;
			width: $fwf-width;
			z-index: -1;
		}

		&__left {
			@include transform( translate3d(#{$fwf-width/2},0,0) );
			left: - $fwf-width;
		}

		&__right {
			@include transform( translate3d(- #{$fwf-width/2},0,0) );
			right: - $fwf-width;
		}
	}

	&--fluid-wrapper {
		float: left;
		width: 100%;
	}

	// Invoke by adding a class to the body
	.active-nav &--row {
		@include transform( translate3d($fwf-width,0,0) );
	}

	.active-nav &--fixed__left,
	.active-nav &--fixed__right { @include transform( translate3d(0,0,0) ); }
}

.drawer-overlay { 
	@include transition( opacity 250ms ease );
	background: rgba(#fff, .33);
	cursor: pointer;
	opacity: 0;
	position: absolute;
		top: 0; right: 0; bottom: 0; left: 0;
	z-index: -1;

	.active-nav & {
		opacity: 1;
		z-index: 9999;
		-webkit-backdrop-filter: blur(8px);
	}
}


// Now, some extra elements and a persistent pattern for keeping the left drawer in view

$mobile-nav-width: 260px; 
$mainnav-width-small: 48px; 
$mainnav-width-medium: 112px; 
$mainnav-width-large: 192px; 
$animation-duration: 400ms; 

$mainnav-linkcolor: palette(brand); 
$mainnav-hovercolor: palette(brand, light);


// A hamburger drawn with psuedo elements. And animated. 

/*<div class="navtoggle">
    <a href=":;javascript" class="navtoggle--button">
        <span class="icon navtoggle--icon" aria-hidden="true"><span>&equiv;</span></span>
        <span class="navtoggle--label">Menu</span>
    </a>
</div>*/
.navtoggle {
	@include transition( all $animation-duration ease-in-out );
	position: relative;
	z-index: map-get($zindex, navtoggle);

	&--button {
		display: block;
		width: $mainnav-width-small;
		padding: 1.625em .75em;

		.active-nav &, 
		&:hover, 
		&:focus { background: rgba(#000, .28); }

		// Draw the Hamburger icon with pseudo elements
		// http://www.elijahmanor.com/css-animated-hamburger-icon/
		& .navtoggle--icon,
		& .navtoggle--icon:before,
		& .navtoggle--icon:after {
			@include transition( all $animation-duration ease-in-out );
			background-color: palette(mono, 66);
			border-radius: 1px;
			content: '';
			cursor: pointer;
			display: inline-block;
			height: .25em;
			position: absolute;
			width: 1.25em;
		}

		& .navtoggle--icon:before { top: -.5em; left: 0; }

		& .navtoggle--icon:after { bottom: -.5em; left: 0; }
	}

	&--label { @include hide; }

	// Animate the hamburger into a close button "X"
	.active-nav & { 

		&--button .navtoggle--icon { background-color: transparent; }

		&--button .navtoggle--icon:before {
			top: 0;
			@include transform( rotate(45deg) );
		}

		&--button .navtoggle--icon:after {
			bottom: 0;
			@include transform( rotate(-45deg) );
		}
	}
}


// ! ===== Media Query changes ===== 

// We don't define a min width, so these styles are present all the way up to $nav-drawer-large-break
/*@include media( (min-width: 59.9375em) ) {

    .mainnav {
		position: fixed; 
			//top: px2em( 52px ); 
		z-index: 1; 
		width: $mobile-nav-width; 
		height: 100%; 
		overflow: scroll; 
		-webkit-overflow-scrolling: touch; 
		@include transition( all $animation-duration ease-in-out ); 
		@include transform( translate3d( - $mobile-nav-width*1.25,0,0) ); // Adds a wider slide effect from the left

		.csstransforms3d .active-nav & {  @include transform( translate3d(0,0,0) ); }
	}

	.fwf--fluid-wrapper { @include transition( all $animation-duration ease-in-out ); }
}

// Small screens... drawer effect still active. Show the menu button but position the rest off canvas
@include media( (min-width: 42.5em) and (max-width: 59.9375em) ) {

	$mobilewidth-plus-navwidth: $mobile-nav-width + $mainnav-width-small; 
	$slide-width: (strip-units($mobilewidth-plus-navwidth) * 1.25) * 1px; 

	.mainnav {
		@include transform( translate3d( - $slide-width,0,0) );
		left: $mobilewidth-plus-navwidth;
		margin-left: - $mobilewidth-plus-navwidth; 
		top: 7em; 
		width: $mobilewidth-plus-navwidth;

		ul { 
			left: - $mobilewidth-plus-navwidth; 
			width: $mobilewidth-plus-navwidth; 
		}
	}

	.fwf--fluid__right { margin-left: $mainnav-width-small; }

	// Hamburger icon, click to open drawer
	.navtoggle {

		&--button {
			background-color: transparent; 
			padding: 3.5em .75em; 
			opacity: .6; 

			&:hover, 
			&:focus { 
			    opacity: 1; 
			    background-color: transparent; 
			}
		}
	}

	.active-nav {

		.navtoggle { width: $mobilewidth-plus-navwidth; }

		.navtoggle--button { 
			opacity: 1; 
			background-color: rgba(#000, .15); 
		}
	}
}

// Large screens... drawer effect inactive. Make the sidebar wider. Stacked icon over label. 
@include media( (min-width: 60em) ) {

	.mainnav {
		position: relative; 
		top: 7em; left: $mainnav-width-medium;
		margin-left: - $mainnav-width-medium; 
		width: $mainnav-width-medium;

		ul { width: $mainnav-width-medium; }

		a { padding: 1.5em 0; }

		.icon, 
		.icon-label { display: block; text-align: center; }

		.icon { margin-right: .0; }

		.icon-label { padding-top: .5em; } 
    	
		// Dim the whole navigation slightly when not being interacted with
		.no-touch & a { opacity: .66; }

		.no-touch &:hover a,
		.no-touch &:focus a,
		.no-touch & a.disabled { opacity: 1; }
	}

	.fwf--fluid__right { margin-left: $mainnav-width-medium; }

	// Drawer open and exposed, menu button present and default action of home link enabled
	.navtoggle--button {
		position: relative; 
		padding: 2.5em .5em 1em; 
		width: $mainnav-width-medium; 
		text-align: center; 

		& .navtoggle--icon, 
		& .navtoggle--icon:before, 
		& .navtoggle--icon:after {
			margin-left: -.625em; 
			background-color: $mainnav-linkcolor; 
		}

		& .navtoggle--icon:before, 
		& .navtoggle--icon:after { left: 50%; }

		.breaker, 
		.icon, 
		.icon-label { 
			display: inline-block; 
			visibility: visible; 
		}
	}

	.navtoggle--button { 
		color: $mainnav-linkcolor; 
		background-color: transparent; 
		opacity: .5;

		&:hover, 
		&:focus { color: $mainnav-hovercolor; }

		&:hover .navtoggle--icon, 
		&:hover .navtoggle--icon:before, 
		&:hover .navtoggle--icon:after {
			background-color: $mainnav-hovercolor; 
		}
    }
}*/